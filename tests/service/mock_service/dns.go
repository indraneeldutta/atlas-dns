// Code generated by MockGen. DO NOT EDIT.
// Source: /Users/neeldutta/go/src/github.com/atlas-dns/services/dns_service/dns.go

// Package mock_dnsservice is a generated GoMock package.
package mock_dnsservice

import (
	reflect "reflect"

	common "github.com/atlas-dns/common"
	models "github.com/atlas-dns/models"
	gomock "github.com/golang/mock/gomock"
)

// MockIDnsService is a mock of IDnsService interface.
type MockIDnsService struct {
	ctrl     *gomock.Controller
	recorder *MockIDnsServiceMockRecorder
}

// MockIDnsServiceMockRecorder is the mock recorder for MockIDnsService.
type MockIDnsServiceMockRecorder struct {
	mock *MockIDnsService
}

// NewMockIDnsService creates a new mock instance.
func NewMockIDnsService(ctrl *gomock.Controller) *MockIDnsService {
	mock := &MockIDnsService{ctrl: ctrl}
	mock.recorder = &MockIDnsServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIDnsService) EXPECT() *MockIDnsServiceMockRecorder {
	return m.recorder
}

// GetDroneLoc mocks base method.
func (m *MockIDnsService) GetDroneLoc(arg0 *common.Context, arg1 models.DroneRequest) (models.DroneResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDroneLoc", arg0, arg1)
	ret0, _ := ret[0].(models.DroneResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDroneLoc indicates an expected call of GetDroneLoc.
func (mr *MockIDnsServiceMockRecorder) GetDroneLoc(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDroneLoc", reflect.TypeOf((*MockIDnsService)(nil).GetDroneLoc), arg0, arg1)
}
